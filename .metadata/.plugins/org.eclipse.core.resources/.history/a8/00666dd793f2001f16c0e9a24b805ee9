package com.example.controller;

import com.example.model.Employee;
import com.example.service.EmployeeService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@RestController
@RequestMapping("/employees")
public class EmployeeController {

    @Autowired
    private EmployeeService service;

    private static final Logger logger = LoggerFactory.getLogger(EmployeeController.class);

    @PostMapping
    public ResponseEntity<String> addEmployee(@RequestBody Employee employee) {
        logger.info("Received request to add employee: {}", employee);
        try {
            service.addEmployee(employee);
            logger.info("Employee added successfully!");
            return ResponseEntity.status(HttpStatus.CREATED).body("Employee added successfully!");
        } catch (Exception e) {
            logger.error("Error while adding employee: ", e);
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Failed to add employee");
        }
    }

    @GetMapping
    public ResponseEntity<List<Employee>> getAllEmployees() {
        logger.info("Received request to get all employees");
        List<Employee> employees = service.getAllEmployees();
        if (employees.isEmpty()) {
            logger.warn("No employees found!");
            return ResponseEntity.noContent().build();
        }
        return ResponseEntity.ok(employees);
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<String> deleteEmployee(@PathVariable String id) {
        logger.info("Received request to delete employee with ID: {}", id);
        try {
            service.deleteEmployee(id);
            logger.info("Employee deleted successfully!");
            return ResponseEntity.ok("Employee deleted successfully!");
        } catch (Exception e) {
            logger.error("Error deleting employee: ", e);
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Failed to delete employee");
        }
    }
}
